version: '3'
services:
#ROUTERS
  routera:
    hostname: routerA
    build: 
      context: ./router
      dockerfile: Dockerfile_router
    #the container as first instruction executes the entrypoint
    entrypoint: entrypoints/ep_routerA.sh
    #set the network and system priviledges high to make it possible to add static route and set the flag for forwarding to 1. Done for all the containers in this primal phase.
    cap_add:
      - NET_ADMIN
    privileged: true
    #shared-volumes between fluentd and the host
    volumes:
      - ./teacher-fluentd/shared-volume/tshark:/shared-volume
    #Started after fluentd (that should collect all the logs)
    depends_on:
      - teacher-fluentd
    #links establishes a link to the fluentd service enabling communication with that container
    links:
      - teacher-fluentd
    #set as logging driver fluentd (to check if it's actually needed)
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 10.200.0.3:24224
        tag: routerA
        #makes the execution non-blocking
        fluentd-async: 'true'
    #put the container in a loop in order to access it with bash
    command: 
      - "/bin/sleep"
      - "infinity"
    networks:
      servernet:
        ipv4_address: 10.100.0.2
      teacher-RA:
        ipv4_address: 10.200.0.2 
      internalnetRouterRB-RA:
        ipv4_address: 10.1.0.2 


  routerb:
    hostname: routerB
    build: 
      context: ./router
      dockerfile: Dockerfile_router
    #the container as first instruction executes the entrypoint
    entrypoint: entrypoints/ep_routerB.sh
    #set the network and system priviledges high to make it possible to add static route and set the flag for forwarding to 1. Done for all the containers in this primal phase.
    cap_add:
      - NET_ADMIN
    privileged: true
    #shared-volumes between fluentd and the host
    volumes:
      - ./teacher-fluentd/shared-volume/tshark:/shared-volume
    #Started after fluentd (that should collect all the logs)
    depends_on:
      - teacher-fluentd
    #links establishes a link to the fluentd service enabling communication with that container
    links:
      - teacher-fluentd
    #set as logging driver fluentd (to check if it's actually needed)
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 10.200.0.3:24224
        tag: routerB
        #makes the execution non-blocking
        fluentd-async: 'true'
    #put the container in a loop in order to access it with bash
    command: 
      - "/bin/sleep"
      - "infinity"
    networks:
      internalnetRouterRB-RA:
        ipv4_address: 10.1.0.3
      internalnetRouterRB-RC:
        ipv4_address: 10.2.0.2
      internalnetRouterRB-RD:
        ipv4_address: 10.3.0.2

  routerc:
    hostname: routerC
    build: 
      context: ./router
      dockerfile: Dockerfile_router
    #the container as first instruction executes the entrypoint
    entrypoint: entrypoints/ep_routerC.sh
    #set the network and system priviledges high to make it possible to add static route and set the flag for forwarding to 1. Done for all the containers in this primal phase.
    cap_add:
      - NET_ADMIN
    privileged: true
      #shared-volumes between fluentd and the host
    volumes:
      - ./teacher-fluentd/shared-volume/tshark:/shared-volume
    #Started after fluentd (that should collect all the logs)
    depends_on:
      - teacher-fluentd
    #links establishes a link to the fluentd service enabling communication with that container
    links:
      - teacher-fluentd
    #set as logging driver fluentd (to check if it's actually needed)
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 10.200.0.3:24224
        tag: routerC
        #makes the execution non-blocking
        fluentd-async: 'true'
    #put the container in a loop in order to access it with bash
    command: 
      - "/bin/sleep"
      - "infinity"
    networks:
      internalnetRouterRB-RC:
        ipv4_address: 10.2.0.3
      clientnet1:
        ipv4_address: 10.0.1.2
      clientnet2:
        ipv4_address: 10.0.2.2

  routerd:
    hostname: routerD
    build: 
      context: ./router
      dockerfile: Dockerfile_router
    #the container as first instruction executes the entrypoint
    entrypoint: entrypoints/ep_routerD.sh
    #set the network and system priviledges high to make it possible to add static route and set the flag for forwarding to 1. Done for all the containers in this primal phase.
    cap_add:
      - NET_ADMIN
    privileged: true
    #shared-volumes between fluentd and the host
    volumes:
      - ./teacher-fluentd/shared-volume/tshark:/shared-volume
    #Started after fluentd (that should collect all the logs)
    depends_on:
      - teacher-fluentd
    #links establishes a link to the fluentd service enabling communication with that container
    links:
      - teacher-fluentd
    #set as logging driver fluentd (to check if it's actually needed)
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 10.200.0.3:24224
        tag: routerD
        #makes the execution non-blocking
        fluentd-async: 'true'
    networks:
      internalnetRouterRB-RD:
        ipv4_address: 10.3.0.3
      clientnet3:
        ipv4_address: 10.0.3.2
      clientnet4:
        ipv4_address: 10.0.4.2

  #SERVIDOR
  server:
    build: 
      context: ./host
      dockerfile: Dockerfile_host
    volumes:
      - ./teacher-fluentd/shared-volume:/shared-volume
    depends_on:
      - teacher-fluentd
    #links establishes a link to the fluentd service enabling communication with that container
    #Started after fluentd (that should collect all the logs)
    links:
      - teacher-fluentd
    #set as logging driver fluentd (to check if it's actually needed)
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 10.200.0.3:24224
        tag: servidor
        #makes the execution non-blocking
        fluentd-async: 'true'
    command:
      - "/bin/sh"
      - "-c"
      - "ip route del default via 10.100.0.1 dev eth0 && ip route add default via 10.100.0.2 dev eth0 && /bin/sleep infinity"  
    cap_add:
      - NET_ADMIN
    #privileged: true
    networks:
      servernet:
        ipv4_address: 10.100.0.3

  #ALUMNOS
  client1:
    build: 
      context: ./host
      dockerfile: Dockerfile_host
    #privedges for network needed to add a new ip route
    cap_add:
      - NET_ADMIN
    command:
      - "/bin/sh"
      - "-c"
      - "ip route del default via 10.0.1.1 dev eth0 && ip route add default via 10.0.1.2 && /bin/sleep infinity"  
    networks:
      clientnet1:
        ipv4_address: 10.0.1.3
  client2:
    build: 
      context: ./host
      dockerfile: Dockerfile_host
    #privedges for network needed to add a new ip route
    cap_add:
      - NET_ADMIN
    command:
      - "/bin/sh"
      - "-c"
      - "ip route del default via 10.0.2.1 dev eth0 && ip route add default via 10.0.2.2 && /bin/sleep infinity" 
    networks:
      clientnet2:
        ipv4_address: 10.0.2.3
  client3:
    build: 
      context: ./host
      dockerfile: Dockerfile_host
    #privedges for network needed to add a new ip route
    cap_add:
      - NET_ADMIN
    command: 
      - "/bin/sh"
      - "-c"
      - "ip route del default via 10.0.3.1 dev eth0 && ip route add default via 10.0.3.2 && /bin/sleep infinity" 
    networks:
      clientnet3:
        ipv4_address: 10.0.3.3
  client4:
    build: 
      context: ./host
      dockerfile: Dockerfile_host
    #privedges for network needed to add a new ip route
    cap_add:
      - NET_ADMIN
    command: 
      - "/bin/sh"
      - "-c"
      - "ip route del default via 10.0.4.1 dev eth0 && ip route add default via 10.0.4.2 && /bin/sleep infinity" 
    networks:
      clientnet4:
        ipv4_address: 10.0.4.3


#PROFESOR
  teacher-fluentd:
    build: 
      context: ./teacher-fluentd
      dockerfile: Dockerfile_professor-fluentd
    privileged: true
    #the container as first instruction executes the entrypoint (since the image doesn't support bash it's used sh)
    entrypoint: sh -c "/ep_fluentd.sh"
    #shared-volumes between fluentd and the host
    volumes:
      - ./teacher-fluentd/conf/fluent.conf:/fluentd/etc/fluent.conf 
      - ./teacher-fluentd/shared-volume:/shared-volume
      - ./teacher-fluentd/output:/fluentd/output/
    #hostPort:containerPort
    #indicates a connection between these 2 ports
    ports:
      - "24224:24224"
      - "24224:24224/udp"
      - "5140/tcp"
    command:
      - "/bin/sh"
      - "-c"
      - "ip route del default via 10.200.0.1 dev eth0 && ip route add default via 10.200.0.2 dev eth0 && /bin/sleep infinity"  
    networks:
      teacher-RA:
        ipv4_address: 10.200.0.3



#REDES
networks:
  clientnet1:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.1.0/24
  clientnet2:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.2.0/24
  clientnet3:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.3.0/24
  clientnet4:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.4.0/24
  internalnetRouterRB-RA:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.0.0/29
  internalnetRouterRB-RC:
    driver: bridge
    ipam:
      config:
        - subnet: 10.2.0.0/29
  internalnetRouterRB-RD:
    driver: bridge
    ipam:
      config:
        - subnet: 10.3.0.0/29
  teacher-RA:
    driver: bridge
    ipam:
      config:
        - subnet: 10.200.0.0/29
  servernet:
    driver: bridge
    ipam:
      config:
        - subnet: 10.100.0.0/24
  defaultfluentd:
    driver: bridge
    ipam:
      config:
        - subnet: 10.100.10.0/24
  